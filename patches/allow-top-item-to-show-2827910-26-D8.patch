diff --git a/core/modules/block/tests/src/Kernel/Migrate/d6/MigrateBlockTest.php b/core/modules/block/tests/src/Kernel/Migrate/d6/MigrateBlockTest.php
index bb59f502c3..20fc726a6a 100644
--- a/core/modules/block/tests/src/Kernel/Migrate/d6/MigrateBlockTest.php
+++ b/core/modules/block/tests/src/Kernel/Migrate/d6/MigrateBlockTest.php
@@ -209,6 +209,7 @@ public function testBlockMigration() {
       'provider' => 'book',
       'label_display' => '0',
       'block_mode' => 'book pages',
+      'show_top_item' => FALSE,
     ];
     $this->assertEntity('book', [], 'sidebar_second', 'bartik', -4, $settings);
 
diff --git a/core/modules/book/config/schema/book.schema.yml b/core/modules/book/config/schema/book.schema.yml
index 97d2f933d7..02123932e7 100644
--- a/core/modules/book/config/schema/book.schema.yml
+++ b/core/modules/book/config/schema/book.schema.yml
@@ -32,3 +32,6 @@ block.settings.book_navigation:
     block_mode:
       type: string
       label: 'Block display mode'
+    show_top_item:
+      type: boolean
+      label: 'Show top level item'
diff --git a/core/modules/book/src/Plugin/Block/BookNavigationBlock.php b/core/modules/book/src/Plugin/Block/BookNavigationBlock.php
index e55fe36525..58a7df03dd 100644
--- a/core/modules/book/src/Plugin/Block/BookNavigationBlock.php
+++ b/core/modules/book/src/Plugin/Block/BookNavigationBlock.php
@@ -88,6 +88,7 @@ public static function create(ContainerInterface $container, array $configuratio
   public function defaultConfiguration() {
     return [
       'block_mode' => "all pages",
+      'show_top_item' => FALSE,
     ];
   }
 
@@ -105,7 +106,21 @@ class BookNavigationBlock extends BlockBase implements ContainerFactoryPluginInt
       '#options' => $options,
       '#default_value' => $this->configuration['block_mode'],
       '#description' => $this->t("If <em>Show block on all pages</em> is selected, the block will contain the automatically generated menus for all of the site's books. If <em>Show block only on book pages</em> is selected, the block will contain only the one menu corresponding to the current page's book. In this case, if the current page is not in a book, no block will be displayed. The <em>Page specific visibility settings</em> or other visibility settings can be used in addition to selectively display this block."),
-      ];
+    ];
+    $form['book_block_mode_book_pages'] = [
+      '#type' => 'container',
+      '#states' => [
+        'visible' => [
+          'input[name="settings[book_block_mode]"]' => ['value' => 'book pages'],
+        ],
+      ],
+    ];
+    $form['book_block_mode_book_pages']['show_top_item'] = [
+      '#type' => 'checkbox',
+      '#title' => $this->t('Show top level item'),
+      '#default_value' => $this->configuration['show_top_item'],
+      '#description' => $this->t('Normally when the option <em>Show block only on book pages</em> is selected the Book Navigation Block will not show a link to the very top-level page of the current book, in other words the first page in the current book will not be shown in the navigation. Enabling this option will cause the first page in the book to appear in the navigation with all other pages displayed below it.'),
+    ];

     return $form;
   }
@@ -115,6 +130,7 @@ public function blockForm($form, FormStateInterface $form_state) {
    */
   public function blockSubmit($form, FormStateInterface $form_state) {
     $this->configuration['block_mode'] = $form_state->getValue('book_block_mode');
+    $this->configuration['show_top_item'] = $form_state->getValue('book_block_mode_book_pages')['show_top_item'];
   }
 
   /**
@@ -167,6 +183,11 @@ public function build() {
       // Only show the block if the user has view access for the top-level node.
       if ($nid) {
         $tree = $this->bookManager->bookTreeAllData($node->book['bid'], $node->book);
+
+        if ($this->configuration['show_top_item']) {
+          return $this->bookManager->bookTreeOutput($tree);
+        }
+
         // There should only be one element at the top level.
         $data = array_shift($tree);
         $below = $this->bookManager->bookTreeOutput($data['below']);
