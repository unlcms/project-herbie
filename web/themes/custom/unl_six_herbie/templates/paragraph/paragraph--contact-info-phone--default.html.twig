{#
  /**
   * @file
   * Default theme implementation to display a paragraph.
   *
   * Available variables:
   * - paragraph: Full paragraph entity.
   *   Only method names starting with "get", "has", or "is" and a few common
   *   methods such as "id", "label", and "bundle" are available. For example:
   *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
   *   - paragraph.id(): The paragraph ID.
   *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
   *   - paragraph.getOwnerId(): The user ID of the paragraph author.
   *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
   *   and methods for the paragraph object.
   * - content: All paragraph items. Use {{ content }} to print them all,
   *   or print a subset such as {{ content.field_example }}. Use
   *   {{ content|without('field_example') }} to temporarily suppress the printing
   *   of a given child element.
   * - attributes: HTML attributes for the containing element.
   *   The attributes.class element may contain one or more of the following
   *   classes:
   *   - paragraphs: The current template type (also known as a "theming hook").
   *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
   *     "Image" it would result in "paragraphs--type--image". Note that the machine
   *     name will often be in a short form of the human readable label.
   *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
   *     preview would result in: "paragraphs--view-mode--preview", and
   *     default: "paragraphs--view-mode--default".
   * - view_mode: View mode; for example, "preview" or "full".
   * - logged_in: Flag for authenticated user status. Will be true when the
   *   current user is a logged-in member.
   * - is_admin: Flag for admin user status. Will be true when the current user
   *   is an administrator.
   *
   * @see template_preprocess_paragraph()
   *
   * @ingroup themeable
   */
  #}
  {% set counter = 0 %}

  {%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

  {% block paragraph %}
    <div class="">
      {% block content %}
        {% if content.p_b_cinfo_phone_phone.0 %}

          {% if content.p_b_cinfo_phone_header.0 %}
            {% set phoneHeader = content.p_b_cinfo_phone_header %}
          {% else %}
            {% set phoneHeader = 'Phone' %}
          {% endif %}

          <dl>
            <dt class="dcf-sr-only">{{phoneHeader}}</dt>
            <dd class="dcf-relative dcf-mb-2 ">
              <div class="dcf-flex-row dcf-d-flex dcf-ai-center">

                <div class="dcf-flex-shrink-0 dcf-h-5 dcf-w-5 unl-gray">
                  <svg class="dcf-h-100% dcf-w-100% dcf-fill-current" focusable="false" height="16" width="16" viewbox="0 0 24 24">
                    <path d="M16.5 0h-9A2.503 2.503 0 0 0 5 2.5v19C5 22.879 6.122 24 7.5 24h9c1.378 0 2.5-1.121 2.5-2.5v-19C19 1.121 17.879 0 16.5 0zM6 5h12v14H6V5zm1.5-4h9c.828 0 1.5.673 1.5 1.5V4H6V2.5C6 1.673 6.673 1 7.5 1zm9 22h-9c-.827 0-1.5-.673-1.5-1.5V20h12v1.5c0 .827-.672 1.5-1.5 1.5z"/><path d="M9.5 3h5a.5.5 0 1 0 0-1h-5a.5.5 0 0 0 0 1zM12 20.5a1.001 1.001 0 0 0 0 2 1.001 1.001 0 0 0 0-2zm0 1.5v-.5h.001L12 22z"/><path fill="none" d="M0 0h24v24H0z"/>
                  </svg>
                </div>

                {% set phoneNumberDetails = content.p_b_cinfo_phone_phone[0]['#context']['value'] %}
                {% set phoneNumberDetails = phoneNumberDetails|replace({'|':','}) %}
                {% set phoneNumberDetails = phoneNumberDetails|replace({' ':''}) %}
                {% set phoneNumberDetails = phoneNumberDetails|split(',') %}

                <div class="dcf-d-flex dcf-flex-col dcf-jc-center dcf-ai-start">
                  {% if content.p_b_cinfo_phone_header.0 %}
                    <div class="dcf-pl-2 dcf-bold" aria-hidden="true">{{phoneHeader}}</div>
                  {% endif %}

                  {% if phoneNumberDetails|length == 2 %}
                    {% set filtered_phone_number = preg_replace('/[^0-9]/', '', phoneNumberDetails.0) %}
                    <a class="dcf-pl-2" href="tel:{{filtered_phone_number}}" itemprop="telephone">
                      <span class="dcf-txt-nowrap">{{phoneNumberDetails.0 ~ ' ext. ' ~ phoneNumberDetails.1 }}</span>
                    </a>
                  {% else  %}
                   {% set filtered_phone_number = preg_replace('/[^0-9]/', '', phoneNumberDetails.0) %}
                   <a class="dcf-pl-2" href="tel:{{filtered_phone_number}}" itemprop="telephone">
                    <span class="dcf-txt-nowrap">{{phoneNumberDetails.0}}</span>
                   </a>
                  {% endif %}
                </div>


              </div>
            </dd>
          </dl>
        {% endif %}
      {% endblock %}
    </div>
  {% endblock paragraph %}
