define(["exports","./dcf-utility"],function(t,n){function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,function(t){t=function(t,e){if("object"!=i(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);r=r.call(t,e||"default");if("object"!=i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}(t,"string");return"symbol"==i(t)?t:t+""}(o.key),o)}}Object.defineProperty(t,"__esModule",{value:!0}),t.DCFTable=void 0;t.DCFTable=function(){function e(t){if(!(this instanceof e))throw new TypeError("Cannot call a class as a function");this.tables=t}return t=e,(r=[{key:"initialize",value:function(){Array.prototype.forEach.call(this.tables,function(t){t=t.parentNode;t&&t.classList.contains("dcf-overflow-x-auto")&&(t.hasAttribute("tabIndex")||t.setAttribute("tabIndex",n.DCFUtility.magicNumbers("int0")))})}}])&&a(t.prototype,r),o&&a(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,r,o}()});