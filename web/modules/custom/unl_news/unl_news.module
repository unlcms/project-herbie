<?php

/**
 * @file
 * The .module file for UNL News.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;
use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 */
function unl_news_theme($existing, $type, $theme, $path) {
  return [
    'unl_news_recent_news_block' => [
      'variables' => [
        'subhead' => '',
        'items' => [],
        'more_link' => '',
      ],
    ],
    'unl_news_news_aggregation_block' => [
      'variables' => [
        'items' => [],
        'pager' => [],
      ],
    ],
  ];
}

/**
 * Cron job for UNL News.
 */
function unl_news_cron() {
  /** @var QueueFactory $queue_factory */
  $queue_factory = \Drupal::service('queue');
  /** @var QueueInterface $queue */
  $queue = $queue_factory->get('nebraska_today_queue_processor');

  /** @var Drupal\Core\State\StateInterface */
  $state_service = \Drupal::service('state');
  $queued_items = $state_service->get('unl_news.nebraska_today.queued_items', []);

  /** @var \Drupal\Core\Cache\RefinableCacheableDependencyInterface */
  $config = \Drupal::service('config.factory')->get('unl_news.settings');

  // Get tag IDs from config.
  $tag_ids = $config->get('tag_ids');
  if (empty($tag_ids)) {
    return;
  }
  $tag_ids = implode('+', $tag_ids);

  /** @var \GuzzleHttp\ClientInterface */
  $client = \Drupal::service('http_client');
  $url = 'https://news.unl.edu/api/v1/articles?format=json';

  // Set initial page values for while loop.
  $current_page = 0;
  $total_pages = 1;

  // Loop through API result pages.
  while ($current_page < $total_pages) {
    $request = $client->get($url . '&tagIds=' . $tag_ids . '&page=' . $current_page);
    $json_string = (string) $request->getBody();
    $response_payload = json_decode($json_string);

    $current_page++;
    $total_pages = $response_payload->resultsSummary->pages;

    // Loop through returned news items.
    foreach ($response_payload->data as $item) {
      // Check if item is already queued before adding to queue.
      if (in_array($item->id, $queued_items)) {
        continue;
      }

      // Check if news node with foreign key exists before adding to queue.
      $query = \Drupal::entityQuery('node')
        ->condition('type', 'news')
        ->condition('n_news_foreign_key', $item->id)
        ->accessCheck(FALSE);
      $results = $query->execute();
      if (!$results) {
        $queue->createItem($item);
        $queued_items[$item->id] = $item->id;
      }
    }
  }

  // Add items to state queued-items list.
  $state_service->set('unl_news.nebraska_today.queued_items', $queued_items);

  $time = \Drupal::service('datetime.time')->getCurrentTime();
  $state_service->set('unl_news.nebraska_today.queue_last_run', $time);
}

/**
 * Implements hook_link_alter().
 */
function unl_news_link_alter(&$variables) {
  // Proceed if link is for node canonical link.
  if (isset($variables['options']['entity_type'])
    && $variables['options']['entity_type'] == 'node'
    && !empty($variables['options']['entity'])
    && $variables['url']->isRouted()
    && $variables['url']->getRouteName() == 'entity.node.canonical'
    ) {

    // Load entity and check that bundle is 'news'.
    $entity = $variables['options']['entity'];
    if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'news') {
      // If the news node has a canonical URL, then replace node view URI.
      if ($canonical_url = $entity->get('n_news_canonical_url')->getString()) {
        $variables['url'] = URL::fromUri($canonical_url);
      }
    }
  }
}

/**
 * Implements hook_node_access().
 *
 * Note hook_node_access() is bypassed by users with the
 * 'Bypass content access control' permission.
 */
function unl_news_node_access(NodeInterface $node, $op, AccountInterface $account) {
  // Deny access to update & delete operations for news nodes.
  if ($node->bundle() == 'news' && !$node->isNew() && in_array($op, ['update', 'delete'])) {
    if ($node->get('n_news_foreign_key')->getString()) {
      return AccessResult::forbidden()
        ->cachePerUser()
        ->addCacheableDependency($node);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function unl_news_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['node_news_form', 'node_news_edit_form'])) {

    // Only users with the 'bypass content access control' permission can
    // see Nebraska Today-related fields.
    /** @var \Drupal\Core\Session\AccountProxyInterface */
    $current_user = \Drupal::service('current_user');
    if ($current_user->hasPermission('bypass node access')) {
      // Nebraska Today import-related fields are always disabled.
      $form['n_news_canonical_url']['widget']['#disabled'] = TRUE;
      $form['n_news_foreign_key']['widget']['#disabled'] = TRUE;
    }
    else {
      unset($form['#fieldgroups']['group_nebraska_today']);
      unset($form['n_news_canonical_url']);
      unset($form['n_news_foreign_key']);
    }
  }
}
