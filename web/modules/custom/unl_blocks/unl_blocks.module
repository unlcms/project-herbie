<?php

/**
 * @file
 * This is the module provides block customizations and functionality.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\unl_utility\UNLUtilityTrait;

/**
 * Implements hook_form_alter().
 */
function unl_blocks_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Drupal does not respect JS dependencies when loading via AJAX.
  // See https://www.drupal.org/project/drupal/issues/1988968. Interestingly,
  // patch #162, which other developers report as working, does not fix this
  // instance. As a workaround, this module checks if a user has the
  // "use unl code block" permissions and then loads the library on Layout
  // Builder forms and on the block admin form. If the CodeMirror library is
  // already loaded on the page, then the AJAX issue is sidestepped.
  if ((\Drupal::service('unl_utility.manager')->stringEndsWith($form_id, 'layout_builder_form') || $form_id == 'block_admin_display_form')
    && (\Drupal::currentUser()->hasPermission('create html_code block content')
      || \Drupal::currentUser()->hasPermission('edit html_code block content'))
    ) {
    $form['#attached']['library'][] = 'codemirror_editor/codemirror';
  }
}

/**
 * Implements hook_block_type_form_alter().
 *
 * This alters the custom block edit form, not the core block UI config form.
 */
function unl_blocks_block_type_form_alter(array &$form, FormStateInterface &$form_state, string $block_type) {
  if ($block_type == 'card') {
    unset($form['b_card_cta_style']['widget']['#options']['_none']);
    $form['b_card_cta_style']['#states'] = [
      'visible' => [
        [
          'input[name="b_card_cta[0][uri]"' => ['filled' => TRUE],
          'input[name="settings[block_form][b_card_cta][0][uri]"' => ['filled' => TRUE],
        ]
      ],
    ];
    $form['b_card_cta_style']['widget']['#states'] = [
      'required' => [
        [
          'input[name="b_card_cta[0][uri]"' => ['filled' => TRUE],
          'input[name="settings[block_form][b_card_cta][0][uri]"' => ['filled' => TRUE],
        ]
      ],
    ];

    $form['#validate'][] = '_unl_blocks_card_form_validate';
  }
}

/**
 * Validation callback function for Card block type form.
 *
 * @param array $form
 *   Nested array of form elements that comprise the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state.
 */
function _unl_blocks_card_form_validate(array &$form, FormStateInterface &$form_state) {
  $values = $form_state->getValues();
  if (!empty($values['b_card_cta_style'][0]['value']) && empty($values['b_card_cta_style'][0]['value'])) {
    $form_state->setErrorByName('b_card_cta_style', t('CTA Style field is required'));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * This alters the core block UI config form, not the custom block edit form.
 */
function unl_blocks_form_block_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
  /** @var  \Drupal\block\Entity\Block */
  $block = $form_state->getFormObject()->getEntity();
  $plugin_id = $block->getPluginID();

  // Modify certain block_content configuration forms.
  $plugin_id = explode(':', $plugin_id);
  if (isset($plugin_id[0]) && $plugin_id[0] == 'block_content') {
    /** @var \Drupal\block_content\Entity\BlockContent */
    $block_content = \Drupal::service('entity.repository')->loadEntityByUuid('block_content', $plugin_id[1]);
    if ($block_content) {
      $bundle = $block_content->bundle();

      // Modify Contact Info block instance config form.
      if ($bundle == 'contact_info') {
        // The label is always displayed.
        $form['settings']['label_display']['#default_value'] = 'visible';
        $form['settings']['label_display']['#disabled'] = TRUE;
        // Run through validation because FAPI doesn't check disabled
        // elements for tampering.
        $form['#validate'][] = '_unl_blocks_contact_info_block_form_validate';
      }
    }
  }

  /**
   * Validation callback function for Contact Info core block config form.
   *
   * @param array $form
   *   Nested array of form elements that comprise the form.
   * @param \Drupal\Core\Form\FormStateInterface $form_state
   *   The form state.
   */
  function _unl_blocks_contact_info_block_form_validate(array &$form, FormStateInterface $form_state) {
    $values = $form_state->getValues();
    // FAPI doesn't enforce disabled elements, so we override any
    // user tampering here.
    if ($values['settings']['label_display'] !== 'visible') {
      $form_state->setValue(['settings', 'label_display'], 'visible');
    }
  }

}

// /**
//  * Implements hook_entity_view_alter().
//  */
// function unl_blocks_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
//   if ($entity->getEntityTypeId() == 'block_content'
//     && $entity->bundle() == 'hero'
//     ) {

//     // Swap out responsive image style for b_hero_image based on
//     // b_hero_size field value.
//     $hero_size = $build["b_hero_size"]["#items"]->getValue()[0]['value'];

//     switch ($hero_size) {
//       case 'dcf-hero-sm':
//         $build["b_hero_image"][0]["#responsive_image_style_id"] = 'hero_small';
//         break;

//       case 'dcf-hero-md':
//         $build["b_hero_image"][0]["#responsive_image_style_id"] = 'hero_medium';
//         break;

//       case 'dcf-hero-lg':
//         $build["b_hero_image"][0]["#responsive_image_style_id"] = 'hero_large';
//         break;
//     }
//   }
// }
