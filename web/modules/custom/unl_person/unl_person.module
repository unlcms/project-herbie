<?php

use Drupal\node\Entity\Node;

/**
 * Implements hook_theme().
 */
function unl_person_theme($existing, $type, $theme, $path) {
  return [
    'unl_person_person_list' => [
      'variables' => [
        'attributes' => [],
        'nodes' => [],
        'view_mode' => [],
      ],
    ],
  ];
}

/**
 * Temporarily commented out until further research is conducted to determine
 * when itâ€™s appropriate to automatically unpublish a person after they leave the university,
 * as there may be alumni and news items referencing these individuals. Also add a 404 logic.
 *
 * Implements hook_cron().
 */

// function unl_person_cron() {

//   // Load all nodes of the 'person' content type.
//   $nids = \Drupal::entityQuery('node')
//     ->accessCheck(access_check: FALSE)  // Disable access checks.
//     ->condition('type', 'person')
//     ->execute();

//   // Load the nodes.
//   $nodes = Node::loadMultiple($nids);

//   foreach ($nodes as $node) {
//     // Check if n_person_unldirectoryreference field has data.
//     if ($node->hasField(field_name: 'n_person_unldirectoryreference') && !$node->get('n_person_unldirectoryreference')->isEmpty()) {
//       if ($node->get('n_person_unldirectoryreference')->getValue()) {
//         $n_person_unldirectoryreference_value = $node->get('n_person_unldirectoryreference')->getValue()[0]['target_id'];
//         $person_unldirectoryreference_data = file_get_contents('https://directory.unl.edu/service.php?format=json&uid=' . $n_person_unldirectoryreference_value);
//       }
//       // Check is person still exists in directory
//       if ($person_unldirectoryreference_data == false) {
//         // Unpublish person node if person no longer exists in directory
//         $node->setUnpublished();
//         $node->set('moderation_state', value: "unpublished");
//         $node->save();
//       }
//     }
//   }
// }

/**
 * Implements hook_form_alter().
 */
function unl_person_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == "node_person_edit_form") {
    $user = \Drupal::currentUser();
    $current_user_roles = $user->getRoles();
    $allowed_roles = ['authenticated', 'viewer'];

    // Disable entitygroup and unldirectoryreference fields
    if (array_diff($current_user_roles, $allowed_roles) === [] && count($current_user_roles) <= count($allowed_roles)) {
      $form['n_person_unldirectoryreference']['widget']['#disabled'] = TRUE;
      $form['entitygroupfield']['#disabled'] = TRUE;
    }
  }
}
